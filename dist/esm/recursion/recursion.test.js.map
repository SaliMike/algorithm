{"version":3,"sources":["../../../src/recursion/recursion.test.js"],"names":["describe","it","data","condition","operation","callback","result","expect","toBe","arr","sum","value","shift"],"mappings":"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","sourcesContent":["import recursion from './recursion';\n\ndescribe('[TEST RECURSION] -', () => {\n  it('should return 0', async () => {\n    const data = 5;\n    const condition = data => data <= 0;\n    const operation = data => data - 1;\n    const callback = data => data;\n    const result = await recursion(data, condition, operation, callback);\n    expect(result).toBe(0);\n  });\n\n  it('should return 5', async () => {\n    const data = 25;\n    const condition = data => data <= 5;\n    const operation = data => data - 1;\n    const callback = data => data;\n    const result = await recursion(data, condition, operation, callback);\n    expect(result).toBe(5);\n  });\n\n  it('should return 20', async () => {\n    const data = { arr: [5, 5, 10, 5], sum: 0 };\n    const condition = data => data.sum >= 20;\n    const operation = data => {\n      const value = data.arr.shift();\n      return { arr: data.arr, sum: data.sum + value };\n    };\n    const callback = data => data;\n    const result = await recursion(data, condition, operation, callback);\n    expect(result.sum).toBe(20);\n  });\n\n  it('should return 13', async () => {\n    const data = { arr: [2, 1, 10, 1, 5], sum: 0 };\n    const condition = data => data.sum >= 4;\n    const operation = data => {\n      const value = data.arr.shift();\n      return { arr: data.arr, sum: data.sum + value };\n    };\n    const callback = data => data;\n    const result = await recursion(data, condition, operation, callback);\n    expect(result.sum).toBe(13);\n  });\n});\n"],"file":"recursion.test.js"}